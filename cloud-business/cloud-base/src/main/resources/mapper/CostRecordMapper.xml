<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personal.cloud.base.mapper.CostRecordMapper">
  <resultMap id="BaseResultMap" type="com.personal.cloud.base.entity.CostRecord">
    <constructor>
      <arg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="userId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="itemId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="costTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="costMoney" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="addTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="deleteFlag" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, itemId, costTime, costMoney, addTime, deleteFlag
  </sql>
  <select id="selectByExample" parameterType="com.personal.cloud.base.entity.CostRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cost_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.personal.cloud.base.entity.CostRecordExample">
    delete from cost_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.personal.cloud.base.entity.CostRecord">
    insert into cost_record (id, userId, itemId, 
      costTime, costMoney, addTime, 
      deleteFlag)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, 
      #{costTime,jdbcType=TIMESTAMP}, #{costMoney,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{deleteFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.personal.cloud.base.entity.CostRecord">
    insert into cost_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="itemId != null">
        itemId,
      </if>
      <if test="costTime != null">
        costTime,
      </if>
      <if test="costMoney != null">
        costMoney,
      </if>
      <if test="addTime != null">
        addTime,
      </if>
      <if test="deleteFlag != null">
        deleteFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="costTime != null">
        #{costTime,jdbcType=TIMESTAMP},
      </if>
      <if test="costMoney != null">
        #{costMoney,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.personal.cloud.base.entity.CostRecordExample" resultType="java.lang.Long">
    select count(*) from cost_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cost_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.itemId != null">
        itemId = #{record.itemId,jdbcType=VARCHAR},
      </if>
      <if test="record.costTime != null">
        costTime = #{record.costTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.costMoney != null">
        costMoney = #{record.costMoney,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        addTime = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null">
        deleteFlag = #{record.deleteFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cost_record
    set id = #{record.id,jdbcType=VARCHAR},
      userId = #{record.userId,jdbcType=VARCHAR},
      itemId = #{record.itemId,jdbcType=VARCHAR},
      costTime = #{record.costTime,jdbcType=TIMESTAMP},
      costMoney = #{record.costMoney,jdbcType=VARCHAR},
      addTime = #{record.addTime,jdbcType=TIMESTAMP},
      deleteFlag = #{record.deleteFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>